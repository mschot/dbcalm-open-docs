Configuration
=============

This guide covers configuring DBCalm after installation.

Database Credentials
--------------------

Location
~~~~~~~~

``/etc/dbcalm/credentials.cnf``

Format
~~~~~~

The credentials file uses MySQL configuration file format:

.. code-block:: ini

   [client-dbcalm]
   user=backupuser
   password=your_secure_password
   host=localhost

.. warning::
   The package creates this file with a placeholder password (``changeme``).
   You MUST update it with your actual MariaDB backup user password.

Updating Credentials
~~~~~~~~~~~~~~~~~~~~

.. code-block:: bash

   sudo nano /etc/dbcalm/credentials.cnf

After updating, restart the API:

.. code-block:: bash

   sudo systemctl restart dbcalm-api

File Permissions
~~~~~~~~~~~~~~~~

The credentials file must be readable by the ``mysql`` user:

.. code-block:: bash

   sudo chown mysql:dbcalm /etc/dbcalm/credentials.cnf
   sudo chmod 640 /etc/dbcalm/credentials.cnf

SSL Certificates
----------------

Development (Self-Signed - Included)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The package automatically generates a self-signed SSL certificate:

* Certificate: ``/etc/dbcalm/ssl/fullchain-cert.pem``
* Private Key: ``/etc/dbcalm/ssl/private-key.pem``

Valid for ``dbcalm.localhost``. This is safe for development and testing but will show browser warnings
when accessing the API. To proceed, click "Advanced" (or similar) and then "Proceed to localhost"
(or "Accept the Risk") in your browser.

Custom Development Certificate (mkcert)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

For development with custom domains and trusted certificates:

Install mkcert:

.. code-block:: bash

   # Debian/Ubuntu
   sudo apt install mkcert

   # RHEL/CentOS/Fedora
   sudo yum install mkcert  # or dnf install mkcert

Install local certificate authority:

.. code-block:: bash

   mkcert -install

Generate certificate:

.. code-block:: bash

   mkcert -cert-file /etc/dbcalm/ssl/fullchain-cert.pem \
          -key-file /etc/dbcalm/ssl/private-key.pem \
          localhost 127.0.0.1 dbcalm.local

Set permissions:

.. code-block:: bash

   sudo chown dbcalm:dbcalm /etc/dbcalm/ssl/*
   sudo chmod 640 /etc/dbcalm/ssl/*

Restart API:

.. code-block:: bash

   sudo systemctl restart dbcalm-api

Production (Let's Encrypt)
~~~~~~~~~~~~~~~~~~~~~~~~~~~

For production deployments with a real domain name:

Install Certbot:

.. code-block:: bash

   # Debian/Ubuntu
   sudo apt install certbot

   # RHEL/CentOS
   sudo yum install certbot

   # Fedora
   sudo dnf install certbot

Stop DBCalm temporarily (certbot needs port 443):

.. code-block:: bash

   sudo systemctl stop dbcalm-api

Obtain certificate:

.. code-block:: bash

   sudo certbot certonly --standalone -d yourdomain.com

Copy to DBCalm:

.. code-block:: bash

   sudo cp /etc/letsencrypt/live/yourdomain.com/fullchain.pem \
           /etc/dbcalm/ssl/fullchain-cert.pem
   sudo cp /etc/letsencrypt/live/yourdomain.com/privkey.pem \
           /etc/dbcalm/ssl/private-key.pem

Set permissions:

.. code-block:: bash

   sudo chown dbcalm:dbcalm /etc/dbcalm/ssl/*
   sudo chmod 640 /etc/dbcalm/ssl/*

Start API:

.. code-block:: bash

   sudo systemctl start dbcalm-api

Certificate Auto-Renewal
~~~~~~~~~~~~~~~~~~~~~~~~~

Create renewal hook to automatically update DBCalm certificates:

.. code-block:: bash

   sudo nano /etc/letsencrypt/renewal-hooks/deploy/dbcalm-update.sh

Add:

.. code-block:: bash

   #!/bin/bash
   cp /etc/letsencrypt/live/yourdomain.com/fullchain.pem /etc/dbcalm/ssl/fullchain-cert.pem
   cp /etc/letsencrypt/live/yourdomain.com/privkey.pem /etc/dbcalm/ssl/private-key.pem
   chown dbcalm:dbcalm /etc/dbcalm/ssl/*
   chmod 640 /etc/dbcalm/ssl/*
   systemctl restart dbcalm-api

Make executable:

.. code-block:: bash

   sudo chmod +x /etc/letsencrypt/renewal-hooks/deploy/dbcalm-update.sh

Test renewal:

.. code-block:: bash

   sudo certbot renew --dry-run

API Configuration
-----------------

Configuration File
~~~~~~~~~~~~~~~~~~

Location: ``/etc/dbcalm/config.yml``

The package creates a template with auto-generated JWT secret key.

Available Options
~~~~~~~~~~~~~~~~~

.. code-block:: yaml

   # CORS - Allowed origins for web frontend
   cors_origins:
     - "https://yourdomain.com"
     - "https://admin.yourdomain.com"

   # API binding
   api_host: "0.0.0.0"  # Listen on all interfaces
   api_port: 8335

   # SSL certificates
   ssl_cert: "/etc/dbcalm/ssl/fullchain-cert.pem"
   ssl_key: "/etc/dbcalm/ssl/private-key.pem"

   # Logging
   log_file: "/var/log/dbcalm/dbcalm.log"
   log_level: "info"  # Options: debug, info, warning, error

   # JWT authentication (auto-generated by package)
   jwt_secret_key: "your-generated-secret-here"
   jwt_algorithm: "HS256"

CORS Configuration
~~~~~~~~~~~~~~~~~~

To allow your web frontend to access the API, add its domain to ``cors_origins``:

.. code-block:: yaml

   cors_origins:
     - "https://dbcalm.yourdomain.com"
     - "https://admin.yourdomain.com"
     - "http://localhost:3000"  # For local development

Restricting API Access
~~~~~~~~~~~~~~~~~~~~~~

To bind the API to a specific network interface:

.. code-block:: yaml

   api_host: "10.0.0.50"  # Internal network only

Applying Configuration Changes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

After editing ``config.yml``:

.. code-block:: bash

   sudo systemctl restart dbcalm-api

Environment Variables (Alternative)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Instead of using ``config.yml``, you can configure via environment variables:

.. code-block:: bash

   sudo systemctl edit dbcalm-api

Add:

.. code-block:: ini

   [Service]
   Environment="DBCALM_CORS_ORIGINS=[\"https://yourdomain.com\"]"
   Environment="DBCALM_API_HOST=0.0.0.0"
   Environment="DBCALM_API_PORT=8335"
   Environment="DBCALM_LOG_LEVEL=info"

Reload and restart:

.. code-block:: bash

   sudo systemctl daemon-reload
   sudo systemctl restart dbcalm-api

Backup Storage
--------------

Default Location
~~~~~~~~~~~~~~~~

Backups are stored in: ``/var/lib/dbcalm/backups/``

This directory is created automatically with proper permissions.

Storage Requirements
~~~~~~~~~~~~~~~~~~~~

* **Full backup**: Approximately the size of your database
* **Incremental backup**: Only stores changed data since the base backup
* Plan storage based on your retention policy

Example for a 10GB database with daily full backups retained for 7 days:

* Minimum: ~70GB
* Recommended: ~100GB (with buffer)

Custom Storage Location
~~~~~~~~~~~~~~~~~~~~~~~

.. note::
   Configuration for custom backup storage location will be available in a future release.

For now, you can use a symlink:

.. code-block:: bash

   # Stop services
   sudo systemctl stop dbcalm-api

   # Move existing backups (if any)
   sudo mv /var/lib/dbcalm/backups /mnt/external-storage/dbcalm-backups

   # Create symlink
   sudo ln -s /mnt/external-storage/dbcalm-backups /var/lib/dbcalm/backups

   # Set permissions
   sudo chown -R mysql:dbcalm /mnt/external-storage/dbcalm-backups
   sudo chmod -R 2775 /mnt/external-storage/dbcalm-backups

   # Start services
   sudo systemctl start dbcalm-api

Security
--------

Firewall Configuration
~~~~~~~~~~~~~~~~~~~~~~

Allow API port access:

.. code-block:: bash

   # UFW (Ubuntu/Debian)
   sudo ufw allow 8335/tcp
   sudo ufw reload

   # firewalld (RHEL/CentOS/Fedora)
   sudo firewall-cmd --permanent --add-port=8335/tcp
   sudo firewall-cmd --reload

Restrict to Specific IPs:

.. code-block:: bash

   # UFW example - only allow from specific IP
   sudo ufw allow from 10.0.0.0/24 to any port 8335

   # firewalld example
   sudo firewall-cmd --permanent --add-rich-rule='rule family="ipv4" source address="10.0.0.0/24" port port="8335" protocol="tcp" accept'
   sudo firewall-cmd --reload

File Permissions
~~~~~~~~~~~~~~~~

Verify critical file permissions:

.. code-block:: bash

   # Credentials - should be mysql:dbcalm with mode 640
   ls -l /etc/dbcalm/credentials.cnf

   # SSL certificates - should be dbcalm:dbcalm with mode 640
   ls -l /etc/dbcalm/ssl/*

   # Configuration - should be dbcalm:dbcalm with mode 640
   ls -l /etc/dbcalm/config.yml

   # Database - should be mysql:dbcalm with mode 664
   ls -l /var/lib/dbcalm/db.sqlite3

If permissions are incorrect:

.. code-block:: bash

   sudo chown mysql:dbcalm /etc/dbcalm/credentials.cnf
   sudo chmod 640 /etc/dbcalm/credentials.cnf

   sudo chown dbcalm:dbcalm /etc/dbcalm/ssl/*
   sudo chmod 640 /etc/dbcalm/ssl/*

   sudo chown dbcalm:dbcalm /etc/dbcalm/config.yml
   sudo chmod 640 /etc/dbcalm/config.yml

Troubleshooting
---------------

Service Won't Start
~~~~~~~~~~~~~~~~~~~

Check service status:

.. code-block:: bash

   sudo systemctl status dbcalm-api
   sudo systemctl status dbcalm-cmd
   sudo systemctl status dbcalm-mariadb-cmd

View detailed logs:

.. code-block:: bash

   sudo journalctl -u dbcalm-api -n 100 --no-pager
   sudo tail -n 100 /var/log/dbcalm/dbcalm.log

Database Connection Errors
~~~~~~~~~~~~~~~~~~~~~~~~~~~

Test credentials manually:

.. code-block:: bash

   mysql --defaults-file=/etc/dbcalm/credentials.cnf -e "SHOW DATABASES;"

Verify backup user permissions:

.. code-block:: sql

   SHOW GRANTS FOR 'backupuser'@'localhost';

Expected output should include:

.. code-block:: text

   GRANT RELOAD, PROCESS, REPLICATION CLIENT ON *.* TO 'backupuser'@'localhost'

SSL Certificate Errors
~~~~~~~~~~~~~~~~~~~~~~~

Verify certificate files exist and are readable:

.. code-block:: bash

   sudo -u dbcalm ls -l /etc/dbcalm/ssl/

Check certificate details:

.. code-block:: bash

   sudo -u dbcalm openssl x509 -in /etc/dbcalm/ssl/fullchain-cert.pem -text -noout | head -20

Permission Denied Errors
~~~~~~~~~~~~~~~~~~~~~~~~

Check directory ownership:

.. code-block:: bash

   ls -la /var/lib/dbcalm/
   ls -la /var/log/dbcalm/
   ls -la /etc/dbcalm/

Fix ownership if needed:

.. code-block:: bash

   sudo chown -R mysql:dbcalm /var/lib/dbcalm/
   sudo chown -R mysql:dbcalm /var/log/dbcalm/
   sudo chown -R dbcalm:dbcalm /etc/dbcalm/

Command Services Not Running
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The command services (``dbcalm-cmd`` and ``dbcalm-mariadb-cmd``) run as dependencies of the main API service.

Check dependencies:

.. code-block:: bash

   systemctl list-dependencies dbcalm-api

Restart all services:

.. code-block:: bash

   sudo systemctl restart dbcalm-api

This will automatically restart the command services as well.

Port Already in Use
~~~~~~~~~~~~~~~~~~~

If port 8335 is already in use, you can change the API port:

Edit ``/etc/dbcalm/config.yml``:

.. code-block:: yaml

   api_port: 8336  # Use different port

Or set via environment variable:

.. code-block:: bash

   sudo systemctl edit dbcalm-api

Add:

.. code-block:: ini

   [Service]
   Environment="DBCALM_API_PORT=8336"

Then restart:

.. code-block:: bash

   sudo systemctl daemon-reload
   sudo systemctl restart dbcalm-api
